{"version":3,"sources":["components/restaurants/Heading.js","context/AppReducer.js","context/GlobalState.js","components/restaurants/List.js","components/restaurants/Home.js","components/restaurants/Add.js","components/restaurants/Edit.js","App.js","serviceWorker.js","index.js"],"names":["Heading","Navbar","color","dark","Container","NavbarBrand","href","Nav","NavItem","className","to","state","action","type","restaurants","payload","filter","restaurant","id","updateRestaurant","updateRestaurants","map","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","getRestaurants","addRestaurant","deleteRestaurant","getRestaurant","editRestaurant","List","useContext","ListGroup","length","ListGroupItem","key","name","Button","onClick","Home","Add","useState","rating","site","email","phone","street","city","lat","lng","setState","history","useHistory","handleChange","e","target","Form","onSubmit","preventDefault","newRestaurant","uuid","push","FormGroup","Label","Input","placeholder","onChange","for","Edit","props","selectedRestaurant","setSeletedRestaurant","currentRestaurantId","match","params","useEffect","restaurantId","find","App","style","maxWidth","margin","exact","path","component","AddRestaurant","EditRestaurant","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.22d78c7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Navbar, Nav, NavItem, NavbarBrand, Container} from 'reactstrap';\r\n\r\nexport const Heading = () => {\r\n  return (\r\n    <Navbar color='dark' dark>\r\n      <Container>\r\n        <NavbarBrand href='/'>Restaurants</NavbarBrand>\r\n        <Nav>\r\n          <NavItem>\r\n            <Link className='btn btn-primary' to='/addRestaurant'>Add Restaurant</Link>\r\n          </NavItem>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'GET_RESTAURANTS':\r\n      return {\r\n        ...state,        \r\n        restaurants: [...state.restaurants, ...action.payload]\r\n      }      \r\n    case 'ADD_RESTAURANT':\r\n      return {\r\n        ...state,\r\n        restaurants: [...state.restaurants, action.payload]\r\n      }      \r\n    case 'REMOVE_RESTAURANT':\r\n      return {\r\n        ...state,\r\n        restaurants: state.restaurants.filter(restaurant => {\r\n          return restaurant.id !== action.payload;\r\n        })\r\n      }      \r\n    case 'GET_RESTAURANT':\r\n      break;\r\n    case 'EDIT_RESTAURANT':\r\n      const updateRestaurant = action.payload;\r\n\r\n      const updateRestaurants = state.restaurants.map(restaurant => {\r\n        if (restaurant.id === updateRestaurant.id) {\r\n          return updateRestaurant;\r\n        }\r\n        return restaurant;\r\n      })\r\n      return {\r\n        ...state,\r\n        restaurants: updateRestaurants\r\n      }      \r\n    default:\r\n      return state;\r\n  }\r\n}","import React, {createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// initial state\r\nconst initialState = {\r\n  restaurants: []\r\n}\r\n\r\n// create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// provider component\r\nexport const GlobalProvider = ({children}) => {\r\n\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // actions\r\n  const getRestaurants = (restaurants) => {\r\n    dispatch({\r\n      type: 'GET_RESTAURANTS',\r\n      payload: restaurants\r\n    })\r\n  }\r\n\r\n  const addRestaurant = (restaurant) => {\r\n    dispatch({\r\n      type: 'ADD_RESTAURANT',\r\n      payload: restaurant\r\n    })\r\n  }\r\n\r\n  const deleteRestaurant = (id) => {\r\n    dispatch({\r\n      type: 'REMOVE_RESTAURANT',\r\n      payload: id\r\n    })\r\n  }\r\n\r\n  const getRestaurant = (id) => {\r\n    dispatch({\r\n      type: 'GET_RESTAURANT',\r\n      payload: id\r\n    })\r\n  }\r\n\r\n  const editRestaurant = (restaurant) => {\r\n    dispatch({\r\n      type: 'EDIT_RESTAURANT',\r\n      payload: restaurant\r\n    })\r\n  }\r\n\r\n  return(\r\n    <GlobalContext.Provider value={{\r\n      restaurants: state.restaurants,\r\n      getRestaurants,\r\n      addRestaurant,\r\n      deleteRestaurant,\r\n      getRestaurant,\r\n      editRestaurant\r\n    }}>\r\n      {children}\r\n    </GlobalContext.Provider>)\r\n    }","import React, {useContext, useEffect} from 'react'\r\nimport {GlobalContext} from '../../context/GlobalState';\r\nimport {Link} from 'react-router-dom';\r\nimport {ListGroup, ListGroupItem, Button} from 'reactstrap';\r\n\r\nexport const List = () => {\r\n  const {restaurants, deleteRestaurant, getRestaurants} = useContext(GlobalContext);\r\n\r\n  // useEffect(async()=>{\r\n  //   let result = await fetch('/crud/');\r\n  //   let data = await result.json();\r\n  //   getRestaurants(data);\r\n  // },[])\r\n\r\n  return (\r\n    <ListGroup className='mt-4'>      \r\n      {restaurants && (restaurants.length > 0) ? (\r\n        <>\r\n        {restaurants.map(restaurant=>(\r\n          <ListGroupItem className='d-flex' key={restaurant.id}>\r\n            <strong>{restaurant.name}</strong>\r\n            <div className='ml-auto'>\r\n              <Link className='btn btn-warning mr-1' to={`/editRestaurant/${restaurant.id}`}>Edit</Link>\r\n              <Button onClick={()=>deleteRestaurant(restaurant.id)} color='danger'>Delete</Button>\r\n            </div>        \r\n          </ListGroupItem>\r\n        ))}      \r\n        </>\r\n      ) : (<h4 className='text-center'>No hay informacion de restaurantes</h4>)}\r\n      \r\n    </ListGroup>\r\n  )\r\n}\r\n","import React, {useContext, useEffect} from 'react'\r\nimport {Heading} from './Heading';\r\nimport {List} from './List';\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <>\r\n      <Heading></Heading>\r\n      <List></List>\r\n    </>\r\n  )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory } from 'react-router-dom';\r\nimport {Form, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport { GlobalContext} from '../../context/GlobalState';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\nexport const Add = () => {\r\n  \r\n  const [state, setState] = useState({    \r\n    rating:0,\r\n    name:'',\r\n    site:'',\r\n    email:'',\r\n    phone:'',\r\n    street:'',\r\n    city:'',\r\n    state:'',\r\n    lat:0,\r\n    lng:0\r\n  })\r\n  const {addRestaurant} = useContext(GlobalContext);\r\n  const history = useHistory();\r\n  \r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newRestaurant = {\r\n      id:uuid(),\r\n      rating:state.rating,\r\n      name: state.name,\r\n      site: state.site,\r\n      email: state.email,\r\n      phone: state.phone,\r\n      street: state.street,\r\n      city: state.city,\r\n      state: state.state,\r\n      lat: state.lat,\r\n      lng: state.lng\r\n    }\r\n    addRestaurant(newRestaurant);\r\n    history.push('/');\r\n  }\r\n\r\n  const handleChange = (e) => {    \r\n    const value = e.target.value;\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: value\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleOnSubmit}>\r\n      <FormGroup>        \r\n\r\n        <Label>Name</Label>\r\n        <Input type=\"text\" name=\"name\" value={state.name} placeholder=\"Enter Name\" onChange={handleChange}></Input>\r\n\r\n        <Label for=\"selectRating\">Rating</Label>\r\n        <Input type=\"select\" name=\"rating\" value={state.rating} id=\"selectRating\" onChange={handleChange}>\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n          <option>5</option>\r\n        </Input>\r\n\r\n        <Label>Site</Label>\r\n        <Input type=\"text\" name=\"site\" value={state.site} placeholder=\"Enter url of the restaurant\" onChange={handleChange}></Input>\r\n\r\n        <Label>Email</Label>\r\n        <Input type=\"text\" name=\"email\" value={state.email} placeholder=\"Enter Email\" onChange={handleChange}></Input>\r\n\r\n        <Label>Phone</Label>\r\n        <Input type=\"text\" name=\"phone\" value={state.phone} placeholder=\"Enter Phone\" onChange={handleChange}></Input>\r\n\r\n        <Label>Street</Label>\r\n        <Input type=\"text\" name=\"street\" value={state.street} placeholder=\"Enter Street\" onChange={handleChange}></Input>\r\n\r\n        <Label>City</Label>\r\n        <Input type=\"text\" name=\"city\" value={state.city} placeholder=\"Enter City\" onChange={handleChange}></Input>\r\n\r\n        <Label>State</Label>\r\n        <Input type=\"text\" name =\"state\" value={state.state} placeholder=\"Enter State\" onChange={handleChange}></Input>\r\n\r\n        <Label>Lat</Label>\r\n        <Input type=\"text\" name=\"lat\" value={state.lat} placeholder=\"Enter Latitude\" onChange={handleChange}></Input>\r\n\r\n        <Label>Lng</Label>\r\n        <Input type=\"text\" name=\"lng\" value={state.lng} placeholder=\"Enter Longitude\" onChange={handleChange}></Input>      \r\n        \r\n      </FormGroup>\r\n      <Button type='submit'>Submit</Button>\r\n      <Link to='/' className='btn btn-danger ml-2'>Cancel</Link>\r\n    </Form>\r\n  )\r\n}\r\n","import React, {useState, useContext, useEffect} from 'react'\r\nimport {Link, useHistory } from 'react-router-dom';\r\nimport {Form, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport { GlobalContext} from '../../context/GlobalState';\r\n\r\nexport const Edit = (props) => {\r\n\r\n  const [selectedRestaurant, setSeletedRestaurant] = useState({\r\n    id:'',\r\n    rating:0,\r\n    name:'',\r\n    site:'',\r\n    email:'',\r\n    phone:'',\r\n    street:'',\r\n    city: '',\r\n    state: '',\r\n    lat: 0,\r\n    lng: 0\r\n  });\r\n  \r\n  const {restaurants,editRestaurant} = useContext(GlobalContext);\r\n  const history = useHistory();\r\n  const currentRestaurantId = props.match.params.id;\r\n\r\n  useEffect(()=>{\r\n    const restaurantId = currentRestaurantId;\r\n    const selectedRestaurant = restaurants.find(restaurant => restaurant.id === restaurantId)\r\n    setSeletedRestaurant(selectedRestaurant)\r\n  },[currentRestaurantId, restaurants])\r\n  \r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    editRestaurant(selectedRestaurant);\r\n    history.push('/');\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;    \r\n    setSeletedRestaurant({...selectedRestaurant,[e.target.name]:value})\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleOnSubmit}>\r\n      <FormGroup>        \r\n\r\n        <Label>Name</Label>\r\n        <Input type=\"text\" name=\"name\" value={selectedRestaurant.name} placeholder=\"Enter Name\" onChange={handleChange}></Input>\r\n\r\n        <Label for=\"selectRating\">Rating</Label>\r\n        <Input type=\"select\" name=\"rating\" value={selectedRestaurant.rating} id=\"selectRating\" onChange={handleChange}>\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n          <option>5</option>\r\n        </Input>\r\n\r\n        <Label>Site</Label>\r\n        <Input type=\"text\" name=\"site\" value={selectedRestaurant.site} placeholder=\"Enter url of the restaurant\" onChange={handleChange}></Input>\r\n\r\n        <Label>Email</Label>\r\n        <Input type=\"text\" name=\"email\" value={selectedRestaurant.email} placeholder=\"Enter Email\" onChange={handleChange}></Input>\r\n\r\n        <Label>Phone</Label>\r\n        <Input type=\"text\" name=\"phone\" value={selectedRestaurant.phone} placeholder=\"Enter Phone\" onChange={handleChange}></Input>\r\n\r\n        <Label>Street</Label>\r\n        <Input type=\"text\" name=\"street\" value={selectedRestaurant.street} placeholder=\"Enter Street\" onChange={handleChange}></Input>\r\n\r\n        <Label>City</Label>\r\n        <Input type=\"text\" name=\"city\" value={selectedRestaurant.city} placeholder=\"Enter City\" onChange={handleChange}></Input>\r\n\r\n        <Label>State</Label>\r\n        <Input type=\"text\" name =\"state\" value={selectedRestaurant.state} placeholder=\"Enter State\" onChange={handleChange}></Input>\r\n\r\n        <Label>Lat</Label>\r\n        <Input type=\"text\" name=\"lat\" value={selectedRestaurant.lat} placeholder=\"Enter Latitude\" onChange={handleChange}></Input>\r\n\r\n        <Label>Lng</Label>\r\n        <Input type=\"text\" name=\"lng\" value={selectedRestaurant.lng} placeholder=\"Enter Longitude\" onChange={handleChange}></Input>      \r\n        \r\n      </FormGroup>\r\n      <Button type='submit'>Edit Name</Button>\r\n      <Link to='/' className='btn btn-danger ml-2'>Cancel</Link>\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport {Home} from './components/restaurants/Home';\r\nimport {Add as AddRestaurant } from './components/restaurants/Add';\r\nimport {Edit as EditRestaurant} from './components/restaurants/Edit';\r\nimport {GlobalProvider} from './context/GlobalState';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div style={{maxWidth:'30rem', margin:'4rem auto'}}>\r\n      <GlobalProvider>      \r\n        <Router>\r\n          <Switch>\r\n            <Route exact path='/' component={Home}></Route>\r\n            <Route path='/addRestaurant' component={AddRestaurant}></Route>\r\n            <Route path='/editRestaurant/:id' component={EditRestaurant}></Route>\r\n          </Switch>\r\n        </Router>      \r\n      </GlobalProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}